@startuml
left to right direction
skinparam roundcorner 5
skinparam shadowing false

skinparam class {
    BackgroundColor white
    ArrowColor #2688d4
    BorderColor #2688d4
}

!define primary_key(x) <b><color:#b8861b><&key></color> x</b>
!define foreign_key(x) <color:#aaaaaa><&key></color> x
!define column(x) <color:#efefef><&media-record></color> x
!define table(x) entity x << (T, white) >>

table(address) {
    primary_key(id): UUID
    --
    column(country): VARCHAR(127)
    column(city): VARCHAR(127)
    column(street): VARCHAR(255)
    column(postcode): VARCHAR(16)
}

table(subscription) {
    primary_key(id): UUID
    --
    column(name): VARCHAR(255)
    column(price): DECIMAL
    column(type): VARCHAR(64)
    column(period): ENUM
}

table(user) {
    primary_key(id): UUID
    --
    ' user info
    column(email): VARCHAR(255)
    column(first_name): VARCHAR(127)
    column(last_name): VARCHAR(127)
    column(email): VARCHAR(127)
    column(phone_number): VARCHAR(16)
    column(password_hash): BINARY(64)
    ' subscription info
    column(subscription_expiration_date): DATE
    column(feedback_amount): INTEGER
    column(average_rating): DECIMAL
    column(sold_item_amount): INTEGER
    column(created_at): DATETIME
    foreign_key(subscription_id): UUID
}

user::subscription_id --> subscription::id

table(item) {
    primary_key(id): UUID
    --
    column(name): VARCHAR(32)
    column(description): TEXT
    column(price): DECIMAL
    column(state): ENUM
    column(user_email): VARCHAR(127)
    column(user_phone_number): VARCHAR(16)
    column(like_amount): INTEGER
    column(view_amount): INTEGER
    column(created_at): DATETIME
    column(updated_at): DATETIME
    foreign_key(user_id): UUID
    foreign_key(address_id): UUID
}

' TODO: item keywords?
' TODO: item color?

table(user_feedback) {
    primary_key(id): UUID
    --
    column(content): TEXT
    column(rating): DECIMAL
    column(created_at): DATETIME
    foreign_key(author_id): UUID
    foreign_key(seller_id): UUID
    foreign_key(item_id): UUID
}

user_feedback::author_id --> user::id
user_feedback::seller_id --> user::id
user_feedback::item_id --> item::id

table(tag) {
    primary_key(id): UUID
    --
    column(name): VARCHAR(32)
}

item::user_id --> user::id
item::address_id --> address::id

table(item_tag) {
    primary_key(id): UUID
    --
    foreign_key(item_id): UUID
    foreign_key(tag_id): UUID
}

item_tag::item_id --> item::id
item_tag::tag_id --> tag::id

table(item_image) {
    primary_key(id): UUID
    --
    column(content): BLOB
    foreign_key(item_id): UUID
}

item_image::item_id --> item::id

table(favorite_item) {
    primary_key(id): UUID
    --
    foreign_key(item_id): UUID
    foreign_key(user_id): UUID
}

favorite_item::item_id --> item::id
favorite_item::user_id --> user::id

table(chat) {
    primary_key(id): UUID
    --
    foreign_key(item_id): UUID
    foreign_key(customer_id): UUID
    foreign_key(seller_id): UUID
}

chat::item_id --> item::id
chat::customer_id --> user::id
chat::seller_id --> user::id

table(chat_line) {
    primary_key(id): UUID
    --
    column(content): TEXT
    column(created_at): DATETIME
    foreign_key(chat_id): UUID
    foreign_key(user_id): UUID
}

chat_line::chat_id --> chat::id
chat_line::user_id --> user::id

table(chat_attachment) {
    primary_key(id): UUID
    --
    column(filename): VARCHAR(255)
    column(content): BLOB
    column(extension): VARCHAR(32)
    column(created_at): DATETIME
    foreign_key(chat_id): UUID
}

chat_attachment::chat_id --> chat::id

@enduml
